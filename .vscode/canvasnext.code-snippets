{
	// Place your react-canvas-next workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Generate Basic Shape": {
		"scope": "typescriptreact",
		"prefix": "shapecode",
		"body": [
			"import { FC } from 'react'",
			"import { CELL_TAG, CellModel, CellPropsBase } from '../base'",
			"",
			"export interface ${1/(.*)/${1:/capitalize}/}Props extends Omit<CellPropsBase, 'children'> {",
			"  $0",
			"}",
			"",
			"export const ${1/(.*)/${1:/upcase}/}_TYPE = '${1/(.*)/${1:/downcase}/}';",
			"",
			"export interface ${1/(.*)/${1:/capitalize}/}Model extends CellModel<${1/(.*)/${1:/capitalize}/}Props> {",
			"  type: typeof ${1/(.*)/${1:/upcase}/}_TYPE,",
			"}",
			"",
			"export const ${1/(.*)/${1:/capitalize}/}: FC<${1/(.*)/${1:/capitalize}/}Props> = (props) => {",
			"  return (",
			"    <CELL_TAG {...props} type={${1/(.*)/${1:/upcase}/}_TYPE} />",
			"  )",
			"};"
		]
	},

	"Generate Shape Component Story code": {
		"scope": "typescriptreact",
		"prefix": "storyshape",
		"body": [
			"import { Meta, StoryObj } from '@storybook/react';",
			"import { Canvas, $1 } from 'react-canvas-next';",
			"",
			"const meta: Meta<typeof $1> = {",
			"  component: $1,",
			"  tags: ['autodocs'],",
			"  decorators: [",
			"    (Story) => {",
			"      return (",
			"        <Canvas width={400} height={300}>",
			"          <Story />",
			"        </Canvas>",
			"      )",
			"    }",
			"  ]",
			"}",
			"",
			"export default meta;",
			"",
			"type Story = StoryObj<typeof $1>;",
			"",
			"export const Basic: Story = {",
			"  args: {",
			"    $0",
			"  }",
			"};",
			""
		]
	}
}